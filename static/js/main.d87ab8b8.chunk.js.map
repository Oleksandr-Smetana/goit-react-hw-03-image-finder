{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","App.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","apiServises/PixabayAPI.js","App.js","index.js"],"names":["module","exports","Searchbar","state","imageQuery","handleImageNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmitButton","preventDefault","trim","toast","warn","props","onSubmit","className","s","SearchForm","type","SearchFormButton","onClick","this","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","name","onChange","Component","ImageGalleryItem","tags","smallImage","largeImage","ImageGalleryItemImage","alt","src","Button","ImageGallery","images","page","status","error","incrementPageNumber","prevState","prevProps","fetch","then","response","ok","json","Promise","reject","Error","fetchImages","data","hits","catch","message","map","image","webformatURL","largeImageURL","id","App","handleFormSubmit","autoClose","theme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d87ab8b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1TClY\",\"SearchForm\":\"Searchbar_SearchForm__1WCdI\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1gbhT\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2u-WM\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2c9_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__eGHt5\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__xqWql\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1zzJw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3AuY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3vUfA\"};","import { Component } from 'react';\nimport s from './Searchbar.module.css';\nimport { toast } from 'react-toastify';\n\nexport default class Searchbar extends Component {\n  state = {\n    imageQuery: '',\n  };\n\n  handleImageNameChange = e => {\n    this.setState({\n      imageQuery: e.currentTarget.value.toLowerCase(),\n    });\n  };\n\n  handleSubmitButton = e => {\n    e.preventDefault();\n\n    if (this.state.imageQuery.trim() === '') {\n      return toast.warn('Please enter your query!');\n    }\n    this.props.onSubmit(this.state.imageQuery);\n    this.setState({ imageQuery: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm}>\n          <button\n            type=\"submit\"\n            className={s.SearchFormButton}\n            onClick={this.handleSubmitButton}\n          >\n            <span className={s.SearchFormButtonLabel}>\n              Search\n            </span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"imageName\"\n            value={this.state.imageQuery}\n            onChange={this.handleImageNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","// import { Component } from 'react';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  tags,\n  smallImage,\n  largeImage,\n}) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        className={s.ImageGalleryItemImage}\n        alt={tags}\n        src={smallImage}\n        data-source={largeImage}\n      />\n    </li>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ onClick }) {\n  return (\n    <button\n      className={s.Button}\n      type=\"button\"\n      onClick={onClick}\n    >\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import { Component } from 'react';\nimport s from './ImageGallery.module.css';\nimport fetchImages from '../../apiServises/PixabayAPI';\nimport ImageGalleryItem from '../ImageGalleryItem/';\nimport Button from '../Button/Button';\n\nexport default class ImageGallery extends Component {\n  state = {\n    images: [],\n    page: 1,\n    status: 'idle',\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { imageQuery } = this.props;\n    const { page, images } = this.state;\n\n    if (\n      prevProps.imageQuery !== imageQuery ||\n      prevState.page !== page\n    ) {\n      this.setState({ status: 'pending' });\n\n      fetchImages(imageQuery, page)\n        .then(data => {\n          this.setState({\n            images: [...images, ...data.hits],\n            status: 'resolved',\n          });\n        })\n        .catch(error =>\n          this.setState({\n            error: error,\n            status: 'rejected',\n          }),\n        );\n    }\n  }\n\n  incrementPageNumber = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  // scrollToEndPage = () => {\n  //   return window.scrollTo({\n  //     top: document.documentElement.scrollHeight,\n  //     behavior: 'smooth',\n  //   });\n  // };\n\n  // .then(images => {\n  //           if (page === 1) {\n  //             this.setState({ images, status: 'resolved' });\n  //           }\n  //           if (page < 1) {\n  //             this.setState(prevState => [\n  //               ...prevState.images,\n  //               ...images,\n  //             ]);\n  //           }\n  //         })\n\n  render() {\n    const { images, error, status } = this.state;\n\n    if (status === 'idle') {\n      return <div>What are we looking for?</div>;\n    }\n\n    if (status === 'pending') {\n      return <div>Loading...</div>;\n    }\n\n    if (status === 'rejected') {\n      return <div>{error.message}</div>;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <ul className={s.ImageGallery}>\n            {images.map(image => (\n              <ImageGalleryItem\n                key={image.id}\n                tags={image.tags}\n                smallImage={image.webformatURL}\n                largeImage={image.largeImageURL}\n              />\n            ))}\n          </ul>\n\n          <Button onClick={this.incrementPageNumber} />\n        </>\n      );\n    }\n  }\n}\n","const BASE_URL = 'https://pixabay.com/api/?';\nconst API_KEY = '23038692-8ee91ca42b74ab69b2665b678';\n\nexport default function fetchImages(imageQuery, page) {\n  return fetch(\n    `${BASE_URL}q=${imageQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`No images with query: ${imageQuery}...`),\n    );\n  });\n}\n","import { Component } from 'react';\nimport s from './App.module.css';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nclass App extends Component {\n  state = {\n    imageQuery: '',\n  };\n\n  handleFormSubmit = imageQuery => {\n    // console.log(imageQuery);\n    this.setState({ imageQuery });\n  };\n\n  render() {\n    return (\n      <div className={s.App}>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery imageQuery={this.state.imageQuery} />\n        {/* <Loader /> */}\n        {/* <Modal /> */}\n        <ToastContainer autoClose={2500} theme=\"colored\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}